# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 740 2025-06-03 07:22:43Z jpritcha $
PortSystem      1.0
name            eso-fors-fims
version         107.0
revision        2

PortGroup           compilers 1.0

set _tcl_version    8.4.20
set _tcl_branch_id  [join [lrange [split ${_tcl_version} .] 0 1] ""]
set _tcl_branch     [join [lrange [split ${_tcl_version} .] 0 1] .]
set _name           [string map {eso- ""} ${name}]
set _eso_pref       eops-
name                ${_eso_pref}eso-${_name}
set branch          [join [lrange [split ${version} .] 0 1] .]

set _prefix         ${prefix}
prefix              ${_prefix}/libexec/${_eso_pref}eso/${_name}
set _tcltk_dir      ${_prefix}/libexec/${_eso_pref}eso/tcltk-${_tcl_branch}

## Local variables
set instrument                   fors
set fimsVersion                  306603
set autoposVersion               250924
set pafchkVersion                303764
set _skycat_dir                  ${_prefix}/libexec/${_eso_pref}eso/skycat
set TCLTK_REQVER                 ${_tcl_branch}
set SKYCAT_REQVER                3.1.4
set INSUSER                      FIMS
set SKYCAT_CFG                   http://archive.eso.org/skycat/skycat.cfg
#set INSROOT                      $HOME
#set PREP_DIR                     $INSROOT/$INSUSER/PREP
#set LOG_DIR                      $INSROOT/$INSUSER/LOG
#set SET_DIR                      $INSROOT/$INSUSER/SET

# Calculated local variables
set uname_m                      [exec uname -m]
set eso_period                   [lindex [split ${version} .] 0]

conflicts       ${_eso_pref}eso-${instrument}-fims-devel
categories      science
license         GPL-2+
platforms       darwin
maintainers     john.david.pritchard@gmail.com
homepage        http://www.eso.org/sci/observing/phase2/SMGuidelines/FIMS.FORS.html
description     ESO FORS Observation Preparation software
long_description ESO FORS Observation Preparation software.

# http://www.eso.org/sci/observing/phase2/FORS/fimsLIN64_P95.tar.gz
#
distname        ${_eso_pref}eso-${instrument}-fims-${version}
master_sites    https://ftp.eso.org/pub/usg/fims/P${eso_period}
dist_subdir     ${_eso_pref}eso-${instrument}-fims
distfiles       fimsLIN64_P${version}${extract.suffix}



# P101
checksums           fimsLIN64_P101.4.tar.gz \
                    rmd160  a1fb920f53d6c65ad28d376b594f903239e52cd6 \
                    sha256  76c9c85b5da65d4287f5ec680dd8768bcf2f73f6b6e1a175f8ace62f942eded8 \
                    fimsLIN64_P102.1.tar.gz \
                    rmd160  d0f0a01396c42fcc927e81f0c10a12fb88b88aba \
                    sha256  6e7a0aa50dd048c4b9f10b89807d4f1af8ed65880fe513207df38362f9433405 \
                    size    19535931
checksums           fimsLIN64_P107.0.tar.gz \
                    rmd160  6d311709a40653902f3632493c0cd021f85914f3 \
                    sha256  f96e8f16c837e55651b88d4f96b6097b075be681747d01c806c2c03d3325042e \
                    size    19536287

compilers.choose    cc cxx
compilers.setup     -g95 -clang37
#configure.cxx_stdlib

worksrcdir          eso-${instrument}-fims-${version}

post-extract {
   system "/usr/bin/tar -C ${workpath} -zxvf ${workpath}/fimsLIN64.tar.gz \
     fimsLIN64/src/autopos-${autoposVersion}.tar.gz \
     fimsLIN64/src/fims-${fimsVersion}.tar.gz \
     fimsLIN64/src/fims.sh.tpl \
     fimsLIN64/src/pafchk-${pafchkVersion}.tar.gz \
     fimsLIN64/config/FORS1.isf \
     fimsLIN64/config/FORS2.isf \
     fimsLIN64/doc/\* \
     fimsLIN64/bitmap/\* \
     "
     ## fimsLIN64/src/fsmosaic-${fsmosaicVersion}.tar.gz \

   system "/usr/bin/tar -C ${workpath} -zxvf ${workpath}/fimsLIN64/src/autopos-${autoposVersion}.tar.gz"
   system "/usr/bin/tar -C ${workpath} -zxvf ${workpath}/fimsLIN64/src/fims-${fimsVersion}.tar.gz"
   system "/usr/bin/tar -C ${workpath} -zxvf ${workpath}/fimsLIN64/src/pafchk-${pafchkVersion}.tar.gz"
   ## system "/usr/bin/tar -C ${workpath} -zxvf ${workpath}/fimsLIN64/src/fsmosaic-${fsmosaicVersion}.tar.gz"
}

post-patch {
   # Use MacPorts zlib
   delete ${workpath}/pafchk/include/zlib.h
   delete ${workpath}/pafchk/include/zconf.h
   #
   reinplace "s%CC =%CXX =%"                      ${workpath}/autopos/src/makefile.novlt
   reinplace "s%\$(CC)%\$(CXX)%"                  ${workpath}/autopos/src/makefile.novlt
   reinplace "s%^CCFLAG.*%\& -D_DARWIN_C_SOURCE%" ${workpath}/autopos/src/makefile.novlt
}

# depends_build    port:${_eso_pref}eso-skycat port:${_eso_pref}eso-fsmosaic
depends_build     port:zlib
depends_run       port:xorg-server port:${_eso_pref}eso-fsmosaic port:${_eso_pref}eso-skycat


configure {
   reinplace "s%#!/vlt/JAN2006/gnu/bin/perl%#!${prefix}/bin/perl%" ${workpath}/fims/src/gerber2eps.perl
   reinplace "s%#/usr/contrib/bin/perl%#!${prefix}/bin/perl%"      ${workpath}/fims/src/gerber2ps.perl
   ## system "cd ${workpath}/fsmosaic && CC=${configure.cc} CXX=${configure.cxx} ./configure --prefix=${prefix}/${uname_m} --mandir=${prefix}/${uname_m}/share/man"
}

build {
   system "cd ${workpath}/autopos/src && make -w CC=${configure.cc} CXX=${configure.cxx} -f makefile.novlt all"
   system "cd ${workpath}/pafchk/src && make -w CC=${configure.cc} CXX=${configure.cxx} -f makefile.novlt all"
   ## system "cd ${workpath}/fsmosaic && make -w all"
   system "cd ${workpath}/fims/src && make -w CC=${configure.cc} CXX=${configure.cxx} -f makefile.novlt all"

   copy ${workpath}/fimsLIN64/src/fims.sh.tpl ${workpath}/fims.sh
   reinplace "s#\@\@FIMSBASEPATH\@\@#${prefix}/${uname_m}#" ${workpath}/fims.sh
   reinplace "s#\@\@TCLPATH\@\@#${prefix}/${uname_m}/lib:${_tcltk_dir}/lib#" ${workpath}/fims.sh
   reinplace "s#\@\@BINPATH\@\@#${prefix}/${uname_m}/bin:${_skycat_dir}/bin:${_tcltk_dir}/bin#" ${workpath}/fims.sh
   reinplace "s#\@\@LIBPATH\@\@#${prefix}/${uname_m}/lib:${_skycat_dir}/lib:${_tcltk_dir}/lib#" ${workpath}/fims.sh
   reinplace "s#\@\@USER\@\@#${INSUSER}#" ${workpath}/fims.sh
   reinplace "s#\@\@TCLTKREQVER\@\@#${TCLTK_REQVER}#" ${workpath}/fims.sh
   reinplace "s#\@\@SKYCATREQVER\@\@#${SKYCAT_REQVER}#" ${workpath}/fims.sh
   reinplace "s\@^bashlib=.*$\@#&\\nbashlib=${prefix}/${uname_m}/bin/bash_library.sh\@" ${workpath}/fims.sh
   reinplace "s\@^FC_PLUGIN\@#&\@" ${workpath}/fims.sh

   ## delete the following file, otherwise fims expects to find skycat in the fims tree...
   delete ${workpath}/fimsLIN64/doc/skycat_version.txt
}

destroot {
   xinstall -d ${destroot}${prefix}/${uname_m}/bin
   xinstall -d ${destroot}${prefix}/${uname_m}/lib
   xinstall -d ${destroot}${prefix}/bitmap
   xinstall -d ${destroot}${prefix}/config
   xinstall -d ${destroot}${prefix}/doc

   ## Install autopos
   xinstall -p ${workpath}/autopos/bin/AP ${destroot}${prefix}/${uname_m}/bin/

   ## Install pafchk
   xinstall -p {*}[glob ${workpath}/pafchk/bin/*]        ${destroot}${prefix}/${uname_m}/bin/
   xinstall -p -m 644 ${workpath}/pafchk/lib/libpafchk.a ${destroot}${prefix}/${uname_m}/lib/
   xinstall -p ${workpath}/pafchk/lib/libpafchk.so       ${destroot}${prefix}/${uname_m}/lib/

   ## Install fsmosaic
   ## system "cd ${workpath}/fsmosaic && make -w install DESTDIR=${destroot}"
   
   ## Install fims
   xinstall -p ${workpath}/fims.sh                                         ${destroot}${prefix}/${uname_m}/bin/
   xinstall -p ${workpath}/bash_library.sh                                 ${destroot}${prefix}/${uname_m}/bin/   
   xinstall -p -m 755 {*}[glob ${workpath}/fims/bin/*.{sh,perl}]           ${destroot}${prefix}/${uname_m}/bin/
   xinstall -p -m 644 {*}[glob ${workpath}/fims/bin/*.prg]                 ${destroot}${prefix}/${uname_m}/bin/
   xinstall -d ${destroot}${prefix}/${uname_m}/lib/libesoPlugins.tcl
   xinstall -d ${destroot}${prefix}/${uname_m}/lib/libfimsPlugins.tcl
   xinstall -p -m 644 {*}[glob ${workpath}/fims/lib/libesoPlugins.tcl/*]   ${destroot}${prefix}/${uname_m}/lib/libesoPlugins.tcl/
   xinstall -p -m 644 {*}[glob ${workpath}/fims/lib/libfimsPlugins.tcl/*]  ${destroot}${prefix}/${uname_m}/lib/libfimsPlugins.tcl/
   reinplace "s%system fsmosaic%system ${_eso_pref}fsmosaic%"              ${destroot}${prefix}/${uname_m}/lib/libfimsPlugins.tcl/SkyCat_plugin.tcl
   xinstall -p -m 644 {*}[glob ${workpath}/fims/config/*]                  ${destroot}${prefix}/config
   xinstall -p -m 644 {*}[glob ${workpath}/fimsLIN64/doc/*]                ${destroot}${prefix}/doc/
   xinstall -p -m 644 {*}[glob ${workpath}/fimsLIN64/bitmap/*]             ${destroot}${prefix}/bitmap/

   xinstall -p -m 644 ${workpath}/fimsLIN64/config/FORS1.isf               ${destroot}${prefix}/config/
   xinstall -p -m 644 ${workpath}/fimsLIN64/config/FORS2.isf               ${destroot}${prefix}/config/

   ## Create the generic fims.sh
   xinstall -d ${destroot}${_prefix}/bin
   system "ln -vs ${prefix}/${uname_m}/bin/fims.sh ${destroot}${_prefix}/bin/${_eso_pref}fims.sh"
}

use_parallel_build  no
